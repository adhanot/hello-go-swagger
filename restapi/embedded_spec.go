// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "hello",
    "version": "1.0.0"
  },
  "host": "0.0.0.0:8081",
  "basePath": "/v1",
  "paths": {
    "/hello": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "home"
        ],
        "responses": {
          "200": {
            "description": "Hello",
            "schema": {
              "$ref": "#/definitions/WelcomingMessage"
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "description": "To log-in",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "User"
        ],
        "summary": "Log the user",
        "operationId": "Login",
        "parameters": [
          {
            "description": "Login Payload",
            "name": "login",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful log",
            "schema": {
              "$ref": "#/definitions/LoginSuccess"
            }
          },
          "400": {
            "description": "Error Registration",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/register": {
      "post": {
        "description": "To register a new user",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "User"
        ],
        "summary": "Register a new user",
        "operationId": "Register",
        "parameters": [
          {
            "description": "Registeration Payload",
            "name": "signup",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful registeration",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          },
          "400": {
            "description": "Error Registration",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/ServerError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Error"
        },
        "success": {
          "type": "boolean",
          "example": false
        }
      }
    },
    "LoginSuccess": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "token": {
          "type": "string",
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdXRob3JpemVkIjp0cnVlLCJkYXRlX2NyZWF0ZWRfYXQiOiIyMDIxLTA0LTE4VDE5OjQ5OjE4LjE0MzU5MzkxWiIsImRhdGVfZXhwaXJlZF9hdCI6IjIwMjEtMDQtMThUMjE6NDk6MTguMTQzNTk0NDk2WiIsImVtYWlsIjoic2FsdHlANDIuZnIiLCJleHAiOjE2MTg3ODI1NTgsImZuYW1lIjoiYWRyaWVuIiwibG5hbWUiOiJoYW5vdCIsImxvZ2luIjoic2FsdHkifQ.WS5hy8jE-Hdd3NFQcENK4XKAoQBoSVRR-WNaexPtNs4"
        }
      }
    },
    "LoginUser": {
      "type": "object",
      "required": [
        "pseudo",
        "password"
      ],
      "properties": {
        "password": {
          "type": "string",
          "example": "test"
        },
        "pseudo": {
          "type": "string",
          "example": "adhanot"
        }
      }
    },
    "RegisterUser": {
      "type": "object",
      "required": [
        "email",
        "fname",
        "password",
        "pseudo"
      ],
      "properties": {
        "email": {
          "type": "string",
          "example": "test@gmail.fr"
        },
        "fname": {
          "type": "string",
          "example": "adrien"
        },
        "lname": {
          "type": "string",
          "example": "hanot"
        },
        "password": {
          "type": "string",
          "example": "test"
        },
        "pseudo": {
          "type": "string",
          "example": "salty"
        }
      }
    },
    "ServerError": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Server Error"
        }
      }
    },
    "Success": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "success": {
          "type": "object"
        }
      }
    },
    "WelcomingMessage": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Hello, welcome on the go-swagger framework"
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "hello",
    "version": "1.0.0"
  },
  "host": "0.0.0.0:8081",
  "basePath": "/v1",
  "paths": {
    "/hello": {
      "get": {
        "security": [
          {
            "Bearer": []
          }
        ],
        "tags": [
          "home"
        ],
        "responses": {
          "200": {
            "description": "Hello",
            "schema": {
              "$ref": "#/definitions/WelcomingMessage"
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "description": "To log-in",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "User"
        ],
        "summary": "Log the user",
        "operationId": "Login",
        "parameters": [
          {
            "description": "Login Payload",
            "name": "login",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful log",
            "schema": {
              "$ref": "#/definitions/LoginSuccess"
            }
          },
          "400": {
            "description": "Error Registration",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/register": {
      "post": {
        "description": "To register a new user",
        "consumes": [
          "application/json"
        ],
        "tags": [
          "User"
        ],
        "summary": "Register a new user",
        "operationId": "Register",
        "parameters": [
          {
            "description": "Registeration Payload",
            "name": "signup",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful registeration",
            "schema": {
              "$ref": "#/definitions/Success"
            }
          },
          "400": {
            "description": "Error Registration",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/ServerError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Error"
        },
        "success": {
          "type": "boolean",
          "example": false
        }
      }
    },
    "LoginSuccess": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean"
        },
        "token": {
          "type": "string",
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdXRob3JpemVkIjp0cnVlLCJkYXRlX2NyZWF0ZWRfYXQiOiIyMDIxLTA0LTE4VDE5OjQ5OjE4LjE0MzU5MzkxWiIsImRhdGVfZXhwaXJlZF9hdCI6IjIwMjEtMDQtMThUMjE6NDk6MTguMTQzNTk0NDk2WiIsImVtYWlsIjoic2FsdHlANDIuZnIiLCJleHAiOjE2MTg3ODI1NTgsImZuYW1lIjoiYWRyaWVuIiwibG5hbWUiOiJoYW5vdCIsImxvZ2luIjoic2FsdHkifQ.WS5hy8jE-Hdd3NFQcENK4XKAoQBoSVRR-WNaexPtNs4"
        }
      }
    },
    "LoginUser": {
      "type": "object",
      "required": [
        "pseudo",
        "password"
      ],
      "properties": {
        "password": {
          "type": "string",
          "example": "test"
        },
        "pseudo": {
          "type": "string",
          "example": "adhanot"
        }
      }
    },
    "RegisterUser": {
      "type": "object",
      "required": [
        "email",
        "fname",
        "password",
        "pseudo"
      ],
      "properties": {
        "email": {
          "type": "string",
          "example": "test@gmail.fr"
        },
        "fname": {
          "type": "string",
          "example": "adrien"
        },
        "lname": {
          "type": "string",
          "example": "hanot"
        },
        "password": {
          "type": "string",
          "example": "test"
        },
        "pseudo": {
          "type": "string",
          "example": "salty"
        }
      }
    },
    "ServerError": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Server Error"
        }
      }
    },
    "Success": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "success": {
          "type": "object"
        }
      }
    },
    "WelcomingMessage": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "Hello, welcome on the go-swagger framework"
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}`))
}
